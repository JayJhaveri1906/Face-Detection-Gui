# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fimg3.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtGui import QImage
import cv2, imutils
import os,sys
#from faceDet import *
from faceDet import DetectFace


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.detectFacee = DetectFace()
        
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(780, 548)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 71, 17))
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(670, 10, 89, 25))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(670, 490, 89, 25))
        self.pushButton_3.setStyleSheet("background-color: rgb(78, 154, 6);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 50, 651, 431))
        self.label_2.setAutoFillBackground(False)
        self.label_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(670, 460, 101, 21))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(670, 430, 101, 21))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(670, 210, 101, 171))
        self.label_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_5.setWordWrap(True)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(500, 490, 151, 17))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(80, 10, 581, 21))
        self.label_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_7.setObjectName("label_7")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(10, 490, 89, 25))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(120, 490, 89, 25))
        self.pushButton_5.setObjectName("pushButton_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)

        #button function code
        self.pushButton.clicked.connect(self.browseImg)
#        self.pushButton_2.clicked.connect(self.browseImg)
        self.pushButton_3.clicked.connect(self.detectFace)
        self.pushButton_4.clicked.connect(self.grayscalee)
        self.pushButton_5.clicked.connect(self.colorr)
        
        QtCore.QMetaObject.connectSlotsByName(MainWindow)	
	
	# variables
        self.filename = None
        self.tmp = None
        
        
    def browseImg(self):
        print("browseImg")	
        self.filename = QFileDialog.getOpenFileName(filter="Image (*.*)")[0]
#        self.label_7.setText(_translate("MainWindow", filename))
        self.image = cv2.imread(self.filename)
        
        #File dir
        self.label_7.setText(self.filename)
        #res
        height, width, channels = self.image.shape
        self.label_5.setText("Resolution:\n"+str(height)+" * \n"+str(width))        
        #size
        size = os.path.getsize(self.filename)
        self.label_4.setText("Size: "+str(round(float(size)/1024,2))+" KB")
        #type
        extension = os.path.splitext(self.filename)[1]
        self.label_3.setText("Type: "+str(extension))
            
        self.loadImg(self.image)
    
    
    def loadImg(self, image):
        print("browseImg2")
        self.tmp = image
        image = imutils.resize(image,width=640)
        frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        image2 = QImage(frame,frame.shape[1],frame.shape[0],frame.strides[0],QImage.Format_RGB888)
        
        self.label_2.setPixmap(QtGui.QPixmap.fromImage(image2))
        self.pushButton_4.setEnabled(True)
        self.pushButton_3.setEnabled(True)
#        print(image,"\n\n",image2,self.image)
        """scene = QtWidgets.QGraphicsScene(self)
        pixmap = QPixmap(image_path)
        item = QtWidgets.QGraphicsPixmapItem(pixmap)
        scene.addItem(item)
        self.ui.graphicsView.setScene(scene)"""
    	
    	
    def detectFace(self):
    	print("browseImg3")
    	self.pushButton_3.setEnabled(False)
    	
    	self.image, n = self.detectFacee.detFaces(self.image)
    	self.tmp = self.image
    	image = self.image
    	image = imutils.resize(image,width=640)
    	frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    	image2 = QImage(frame,frame.shape[1],frame.shape[0],frame.strides[0],QImage.Format_RGB888)
        
    	self.label_2.setPixmap(QtGui.QPixmap.fromImage(image2))
    	
    	lol = "Number of Faces: "+str(n)
    	self.label_6.setText(lol)
    	
    
    def grayscalee(self):
    	print("browseImg4")
    	try:
    	    self.pushButton_4.setEnabled(False)
    	    self.image = cv2.cvtColor(self.image, cv2.COLOR_BGR2GRAY)
    	    image = self.image
    	    image = imutils.resize(image,width=640)
    	    frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    	    image2 = QImage(frame,frame.shape[1],frame.shape[0],frame.strides[0],QImage.Format_RGB888)
        
    	    self.label_2.setPixmap(QtGui.QPixmap.fromImage(image2))
    	    self.pushButton_5.setEnabled(True)
    	except:
    	    self.pushButton_4.setEnabled(False)
    	
    	
    def colorr(self):
    	print("browseImg5")
    	self.image = self.tmp
    	image = self.image
    	image = imutils.resize(image,width=640)
    	frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    	image2 = QImage(frame,frame.shape[1],frame.shape[0],frame.strides[0],QImage.Format_RGB888)
        
    	self.label_2.setPixmap(QtGui.QPixmap.fromImage(image2))
    	self.pushButton_4.setEnabled(True)
    	self.pushButton_5.setEnabled(False)
    	


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Directory"))
        self.pushButton.setText(_translate("MainWindow", "Browse"))
        self.pushButton_3.setText(_translate("MainWindow", "Detect Face"))
        self.label_3.setText(_translate("MainWindow", "Type:"))
        self.label_4.setText(_translate("MainWindow", "Size:"))
        self.label_5.setText(_translate("MainWindow", "Resolution:"))
        self.label_6.setText(_translate("MainWindow", "Number of Faces: NA"))
        self.label_7.setText(_translate("MainWindow", "Please select a file"))
        self.pushButton_4.setText(_translate("MainWindow", "Grayscale"))
        self.pushButton_5.setText(_translate("MainWindow", "Color"))
        self.pushButton_4.setEnabled(False)
        self.pushButton_5.setEnabled(False)
        self.pushButton_3.setEnabled(False)
        
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    ex = Ui_MainWindow()
    w = QtWidgets.QMainWindow()
    ex.setupUi(w)
    w.show()
    sys.exit(app.exec_())
